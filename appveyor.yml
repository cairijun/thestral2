version: UNKNOWN.{build}
init:
- ps: |
    Set-AppveyorBuildVariable -Name Path -Value "$(go env GOPATH)\bin;$Env:Path"
    Get-ChildItem Env:
    go env
environment:
  Path: C:\mingw-w64\x86_64-6.3.0-posix-seh-rt_v5-rev1\mingw64\bin;C:\cygwin64\bin;%PATH%
install:
- ps: |
    $version = git describe --always --dirty
    $build = $Env:APPVEYOR_BUILD_NUMBER
    Set-AppveyorBuildVariable -Name THESTRAL_VERSION -Value "$version"
    Update-AppveyorBuild -Version "$version-$build"
    Set-Item Env:GO111MODULE "off"
    go get github.com/jstemmer/go-junit-report
    Set-Item Env:GO111MODULE "on"
build_script:
- ps: |
    gcc --version
    go version
    bash -c "./make.sh build --tags=full -o 'thestral2-$Env:THESTRAL_VERSION-win64.exe' 2>&1"
test_script:
- ps: |
    bash -c "./make.sh test -v -race --tags=full > report.out 2>&1"
    $test_exit_status = $lastexitcode
    echo $test_exit_status
    cat report.out | go-junit-report 1> report.xml
    $wc = New-Object 'System.Net.WebClient'
    $wc.UploadFile("https://ci.appveyor.com/api/testresults/junit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path .\report.xml))
    if ($test_exit_status -ne 0) {
        exit $test_exit_status
    }
artifacts:
- path: thestral2-*-win64.exe
  name: Pre-built binary for Windows x64
before_deploy:
- ps: |
    $description = "AppVeyor auto release`n```````n"
    foreach ($artifactName in $artifacts.keys) {
      $hash = Get-FileHash $artifacts[$artifactName].path | Format-List | Out-String | % Trim
      echo $hash
      $description += "$hash`n"
    }
    $description += '```'
    Set-AppveyorBuildVariable -Name RELEASE_DESCRIPTION -Value $description
deploy:
- provider: GitHub
  description: $(RELEASE_DESCRIPTION)
  auth_token:
    secure: uvKDZgEcmgQdvVU4wC+d15FppH0OAbFhLLT0HS/qgZvmprzES15PgiQr8BgTbfk3
  artifact: /Pre-built binary.*/
  draft: true
  on:
    appveyor_repo_tag: true
